fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 5  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 0.5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball$prov.z <- (bball$provenance-mean(bball$provenance,na.rm=TRUE))/(2*sd(bball$provenance,na.rm=TRUE))
datalist.gdd <- with(bball,
list(y = gdd,
prov = provenance,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(species))
)
)
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
library("rstantools", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
options(buildtools.check = function(action) TRUE )
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
#### Simulations code for Hypothesis B: hobo loggers better capture the actual GDD
# Simple, Noisy method, without microclimates
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
set.seed(12321)
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
nspps <- 20
ninds <- 18
ninds_perprov <- 1 ## This means I want x individuals per species to have the same prov at the Arboretum to make it easier on the model
nobs <- nspps*ninds
nsites <- 2  ### Arboretum versus the Forest
nmicros <- 10  ### Number microsites per site so 20 total
nmethods <- 2
ntot <- nobs * nmethods * nsites
### These are our fstar thresholds
fstar <- 300  ### mu_a_sp in model output
fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 5  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 0.5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
#### Simulations code for Hypothesis B: hobo loggers better capture the actual GDD
# Simple, Noisy method, without microclimates
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
set.seed(12321)
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
nspps <- 20
ninds <- 18
ninds_perprov <- 1 ## This means I want x individuals per species to have the same prov at the Arboretum to make it easier on the model
nobs <- nspps*ninds
nsites <- 2  ### Arboretum versus the Forest
nmicros <- 10  ### Number microsites per site so 20 total
nmethods <- 2
ntot <- nobs * nmethods * nsites
### These are our fstar thresholds
fstar <- 300  ### mu_a_sp in model output
fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 5  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 0.5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
install.packages(c("dplyr", "tidyr", "rstan", "rstanarm", "lubridate", "brms", "shiny", "shinystan"))
install.packages("rstan")
install.packages("rstan")
install.packages(c("StanHeaders","rstan"),type="source")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
Sys.setenv(DOWNLOAD_STATIC_LIBV8 = 1) # only necessary for Linux without the nodejs library / headers
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages(c("Rcpp", "RcppEigen", "RcppParallel", "StanHeaders"), type = "source")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
install.packages("remotes")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
install.packages("rstan", type = "source")
install.packages("rstan", type = "source")
pkgbuild::has_build_tools(debug = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
pkgbuild::has_compiler(debug = TRUE)
packageVersion("StanHeaders")
install.packages("StanHeaders", type = "source")
pkgbuild::has_compiler(debug = TRUE)
pkgbuild::has_compiler(debug = TRUE)
pkgbuild::has_compiler(debug = TRUE)
pkgbuild::has_compiler(debug = TRUE)
-v
Sys.which("clang++")
install.packages("rstan")
install.packages(c("RColorBrewer", "viridis", "lme4", "ggplot2", "gridExtra", "shiny"))
#### Simulations code for Hypothesis B: hobo loggers better capture the actual GDD
# Simple, Noisy method, without microclimates
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
set.seed(12321)
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
nspps <- 20
ninds <- 18
ninds_perprov <- 1 ## This means I want x individuals per species to have the same prov at the Arboretum to make it easier on the model
nobs <- nspps*ninds
nsites <- 2  ### Arboretum versus the Forest
nmicros <- 10  ### Number microsites per site so 20 total
nmethods <- 2
ntot <- nobs * nmethods * nsites
### These are our fstar thresholds
fstar <- 300  ### mu_a_sp in model output
fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 5  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 0.5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
library(shiny)
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball$prov.z <- (bball$provenance-mean(bball$provenance,na.rm=TRUE))/(2*sd(bball$provenance,na.rm=TRUE))
datalist.gdd <- with(bball,
list(y = gdd,
prov = provenance,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(species))
)
)
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
install.packages("rstan")
#### Simulations code for Hypothesis B: hobo loggers better capture the actual GDD
# Simple, Noisy method, without microclimates
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
set.seed(12321)
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
nspps <- 20
ninds <- 18
ninds_perprov <- 1 ## This means I want x individuals per species to have the same prov at the Arboretum to make it easier on the model
nobs <- nspps*ninds
nsites <- 2  ### Arboretum versus the Forest
nmicros <- 10  ### Number microsites per site so 20 total
nmethods <- 2
ntot <- nobs * nmethods * nsites
### These are our fstar thresholds
fstar <- 300  ### mu_a_sp in model output
fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 5  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 0.5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
library(shiny)
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball$prov.z <- (bball$provenance-mean(bball$provenance,na.rm=TRUE))/(2*sd(bball$provenance,na.rm=TRUE))
datalist.gdd <- with(bball,
list(y = gdd,
prov = provenance,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(species))
)
)
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 5000, warmup=4500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
options(mc.cores = 4)
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball$prov.z <- (bball$provenance-mean(bball$provenance,na.rm=TRUE))/(2*sd(bball$provenance,na.rm=TRUE))
datalist.gdd <- with(bball,
list(y = gdd,
prov = provenance,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(species))
)
)
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
library(shinystan)
launchshinystan
provmethod_fake
#### Simulations code for Hypothesis B: hobo loggers better capture the actual GDD
# Simple, Noisy method, without microclimates
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
set.seed(12321)
# Step 1: Set up years, days per year, temperatures, sampling frequency, required GDD (fstar)
nspps <- 20
ninds <- 10
ninds_perprov <- 1 ## This means I want x individuals per species to have the same prov at the Arboretum to make it easier on the model
nobs <- nspps*ninds
nsites <- 2  ### Arboretum versus the Forest
nmicros <- 10  ### Number microsites per site so 20 total
nmethods <- 2
ntot <- nobs * nmethods * nsites
### These are our fstar thresholds
fstar <- 300  ### mu_a_sp in model output
fstarspeciessd <- 50 ### sigma_a_sp in model output
## Sigma_y to be added at the end
sigma_y <- 2
#### This is where I test our hypothesis. This doesn't come out of the model directly
prov_effect <- 15  ## provenance effect, this is saying that if sites are from 1 degree north, they require 5 fewer GDD
prov_sd <- 5 ## prov effect sd
#### Next I set up an fstar or a GDD threshold for each individual
#spind <- paste(rep(1:nspps, each=ninds), rep(1:ninds, nspps), sep="_")
fstarspp <- round(rnorm(nspps, fstar, fstarspeciessd), digits=0)
df.fstar <- as.data.frame(cbind(species=rep(1:nspps, each=ninds*nsites*nmethods), ind=rep(1:ninds, nmethods),
fstarspp=rep(fstarspp, each=ninds*nsites*nmethods),
site=rep(c("arb", "hf"), each=ninds*nmethods),
method=rep(rep(c("ws", "hobo"), each=ninds), nsites*nspps)))
table(df.fstar$species, df.fstar$site, df.fstar$method) # emw -- checking
df.fstar$fstarspp <- as.numeric(df.fstar$fstarspp)
#df.fstar$sp_ind <- paste(df.fstar$species, df.fstar$ind, sep="_")
##### Now add in provenance so better able to compare to other simulations
spind <- paste(rep(c(1:nspps), each=ninds), rep(1:ninds, nspps), sep="_")
provenance.hf <- 42.5
provenance.arb <- round(rep(rnorm(nspps*(ninds/ninds_perprov), provenance.hf, 2),each=ninds_perprov), digits=2)
df.prov <- as.data.frame(cbind(sp_ind = rep(rep(spind, nsites),each=nmethods),
site = rep(c("arb", "hf"), each=nobs*nmethods),
provenance = as.numeric(c(rep(provenance.arb, each=nmethods), rep(provenance.hf, nobs*nmethods))),
method = rep(c("ws", "hobo"), nsites*nobs)))
df.prov$species <- as.numeric(gsub("\\_.*" , "", df.prov$sp_ind))
df.prov$ind <- gsub(".*_" , "", df.prov$sp_ind)
df.prov$sp_ind <- NULL
df.fstar$species <- as.numeric(df.fstar$species)
df.bb <- full_join(df.fstar, df.prov)
df.bb$provenance <- as.numeric(df.bb$provenance)
df.bb$hyp_diff <- ifelse(df.bb$provenance==42.5, 0, (42.5-df.bb$provenance))
df.bb$gdd.noise <- df.bb$hyp_diff * rep(rnorm(n=nspps, mean=prov_effect, sd=prov_sd), each=ninds*nsites)
df.bb$gdd <- df.bb$fstarspp + df.bb$gdd.noise + rnorm(n=ntot, mean=0, sd=sigma_y)
##### Clean up the dataframe to prepare for analyses
df.bb <- subset(df.bb, select=c("site", "method", "species", "ind", "gdd.noise", "fstarspp", "gdd", "provenance")) #
bball <- df.bb[!duplicated(df.bb),]
##### Now let's do some checks...
bball$gdd_accuracy <- bball$gdd - bball$fstarspp
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball <- na.omit(bball)
library(RColorBrewer)
library(viridis)
library(lme4)
library(ggplot2)
library(gridExtra)
library(rstan)
library(shiny)
bball$type <- ifelse(bball$method=="ws", 1, 0)
bball$prov.z <- (bball$provenance-mean(bball$provenance,na.rm=TRUE))/(2*sd(bball$provenance,na.rm=TRUE))
datalist.gdd <- with(bball,
list(y = gdd,
prov = provenance,
method = type,
sp = as.numeric(as.factor(species)),
N = nrow(bball),
n_sp = length(unique(species))
)
)
provmethod_fake = stan('~/Documents/git/microclimates/analyses/stan/provmethod_normal_inter.stan', data = datalist.gdd,
iter = 2000, warmup=1500, control=list(adapt_delta=0.99, max_treedepth=15)) ###
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(viridis)
library(egg)
library(rstan)
cols <-viridis_pal(option="viridis")(3)
# Set Working Directory
setwd("~/Documents/git/wildhellgarden/analyses")
### Let's add in Climate data now
clim <- read.csv("input/clean_addinclimate.csv", header=TRUE)
clim <- clim[(clim$climatetype=="weldhill"),]
clim <- clim[(clim$year>=2017),]
clim <- clim[!duplicated(clim),]
spring <- clim[(clim$doy>=60 & clim$doy<=140),]
spring <- spring[(spring$year>=2018),]
winter <- clim[(clim$doy>=240 | clim$doy<=60),]
winter <- winter[!(winter$doy<=60 & winter$year==2017),]
winter$chillyr <- ifelse(winter$doy>=240, (winter$year + 1), winter$year)
winter$doy2 <- ifelse(winter$doy<=60, winter$doy+365, winter$doy)
winclim <- ggplot(winter, aes(x=doy2, y=tmin, col=as.factor(chillyr))) + #geom_point(aes(col=as.factor(year)), alpha=0.1) +
geom_smooth(aes(col=as.factor(chillyr), fill=as.factor(chillyr)), stat="smooth", method="loess", se=TRUE, span=0.9) +
scale_color_manual(name = "Year", values=cols, labels = c("2018", "2019", "2020")) +
scale_fill_manual(name = "Year", values=cols, labels = c("2018", "2019", "2020")) +
theme_classic() + xlab("Day of Year") + ylab("Mean \n Temperature (°C)") +
coord_cartesian(ylim=c(-8, 24), expand=0) + scale_x_continuous(breaks = seq(min(245), max(425), by=30),
labels = c(245, 275, 305, 335, 365, 30, 60))+
scale_y_continuous(breaks=seq(min(-8), max(24), by=4)) + theme(panel.spacing = unit(c(0,0,5,5),"cm"),
legend.text = element_text(size=7),
legend.title = element_text(size=8),
legend.key.size = unit(0.8,"line"))
quartz()
winclim
