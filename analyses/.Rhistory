library(tibble)
x<-rownames_to_column(x,"pltID")
View(x)
dater<-merge(y,x)
View(dater)
modQURU<-glm(QURU~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),data=dater)
summary(QURU)
summary(modQURU)
modQURU<-glm(QURU~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
summary(modQURU)
colnames(dater)
modNYSY<-glm(NYSY~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
summary(modNYSY)
modQUAL<-glm(QUAL~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modQUAL<-glm(QUAL~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modLITU<-glm(LITU~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modLIST2<-glm(LIST2~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
summary(modQUAL)
summary(modLITU)
summary(modLIST2)
colnames(dater)
modCAGL8<-glm(CAGL8~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modQUVE<-glm(QUVE~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modFAGR<-glm(FAGR~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
summary(modFAGR)
summary(modQUVE)
summary(modCAGL8)
colnames(dater)
modTSCA<-glm(TSCA~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modQUMO4<-glm(QUMO4~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modPIST<-glm(PIST~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modDIVI5<-glm(DIVI5~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
summary(modTSCA)
summary(modQUMO4)
cor(dater$tmin,dater$ppt)
cor(dater$tmin,dater$tmax)
summary(modPIST)
summary(modDIVI5)
summary(modQURU)
summary(modNYSY)
summary(modQUAL)
summary(modLITU)
summary(modLIST2)
summary(modFAGR)
summary(modFAGR)
summary(modQUVE)
summary(modCAGL8)
summary(modTSCA)
summary(modQUVE)
summary(modQUMO4)
summary(modPIST)
summary(modDIVI5)
colnames(dater)
modCATO6<-glm(CATO6~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modACRU<-glm(ACRU~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modBEAL2<-glm(BEAL2~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
modBELE<-glm(BELE~scale(tmin)+I(scale(tmin)^2)+scale(ppt)+I(scale(ppt)^2),family = "binomial",data=dater)
###model
data.list <- list(y = y, coords = coords, covs = X)
summary(modCATO6)#
summary(modACRU)#
summary(modBEAL2)#
summary(modBELE)#
###check distances
distrange<-round(quantile(dist.mat),2)
distrange
###check distances
distrange<-round(quantile(dist.mat),2)*100
###check distances
distrange<-round(quantile(dist.mat),2)/1000
distrange
3 / 50000
(3 / 50000)/1000
3 /400000
3 /400000/1000
min.dist
max.dist
3/50000
list(3 /400000, 3 / 50000)
7.5e-06
70000*25
(70000*25)-100000
((70000*25)-100000)/50
((25*7000)-50000)/50
((25*14000)-50000)/50
50000/25
(20000*25)/10
rm(list=ls())
setwd("~/Downloads/")
graphics.off()
library(tidyverse)
d<-read.csv("Students by Year(Sheet1).csv")
View(d)
colnames(d)
d<-d[,1:17]
View(d)
d<-gather(d,6:17, "year","status")
d<-gather(d, "year","status",,6:17,)
d<-gather(d, "year","status",6:17)
View(d)
d<-read.csv("Students by Year(Sheet1).csv")
colnames(d)
d<-d[,1:17]
View(d)
resp<-d[,6:17]
View(resp)
d<-gather(d, "year","status",6:17)
d<-d[,1:17]
d<-read.csv("Students by Year(Sheet1).csv")
colnames(d)
d<-d[,1:17]
d<-select(d,Pronouns)
d<-merge(d,resp)
d<-d[,1:17]
resp<-d[,6:17]
d<-read.csv("Students by Year(Sheet1).csv")
colnames(d)
d<-d[,1:17]
resp<-d[,6:17]
d<-select(d,Pronouns)
d<-merge(d,resp)
colnames(d)
d<-d[,1:17]
resp<-d[,6:17]
d<-select(d,Pronouns)
d<-cbind(d,resp)
d<-read.csv("Students by Year(Sheet1).csv")
colnames(d)
d<-d[,1:17]
resp<-d[,6:17]
d<-select(d,Pronouns)
d<-cbind(d,resp)
View(d)
d<-gather(d,2:13,"year","status")
d<-gather(d,"year","status",2:13
)
View(d)
table(d$status)
View(d)
unique(d$status)
View(d)
rm(list=ls())
setwd("~/Downloads/")
graphics.off()
library(tidyverse)
d<-read.csv("Students by Year(Sheet1).csv")
View(d)
d<-d[1:233,1:17]
View(d)
resp<-d[,6:17]
d<-select(d,Pronouns)
d<-cbind(d,resp)
d<-gather(d,"year","status",2:13)
unique(d$status)
View(d)
goo<-filter(status!="")
goo<-filter(d,status!="")
View(goo)
goo<-filter(goo,status!="withdrew")
goo<-filter(goo,status!="Withdrew")
goo<-goo %>% group_by(Pronouns,year) %>% count()
View(goo)
write.csv(goo,"HCgender.csv")
View(goo)
goo<-spread(goo,year,n)
View(goo)
write.csv(goo,"HCgender.csv")
View(goo)
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
if(length(grep("deirdre", getwd()) > 0)) {
setwd("~/Documents/github/egret/analyses")
} else if(length(grep("lizzie", getwd()) > 0)) {
setwd("/Users/lizzie/Documents/git/projects/egret/analyses")
} else if(length(grep("sapph", getwd()) > 0)) {
setwd("/Users/sapph/Documents/ubc things/work/egret/analyses")
} else if(length(grep("danielbuonaiuto", getwd()) > 0)) {
setwd("/Users/danielbuonaiuto/Documents/git/egret/analyses")
} else if(length(grep("Xiaomao", getwd()) > 0)) {
setwd("C:/PhD/Project/egret/analyses")
} else if(length(grep("britanywuuu", getwd()) > 0)) {
setwd("/Documents/ubc/year5/TemporalEcologyLab/egret/analyses")
} else if(length(grep("Ken", getwd())) > 0){
setwd("/Users/Ken Michiko Samson/Documents/Temporal Ecology Lab/egret/analyses")
} else if(length(grep("christophe_rouleau-desrochers", getwd())) > 0){
setwd("/Users/christophe_rouleau-desrochers/github/egret/analyses")
}
#Deirdre
egret_DL <- read.csv("input/egretScraping/egret_DL.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_DL$datasetID)) #7
dim(egret_DL) #381  45
# Tolu
egret_TA <- read.csv("input/egretScraping/egret_TA.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
#colnames(egret_TA)[colnames(egret_TA) == "germ.tim.zero"] <- "germ.time.zero"
colnames(egret_TA)[colnames(egret_TA) == "notes"] <- "Notes"
length(unique(egret_TA$datasetID)) #42
dim(egret_TA) # 2879   45
# Sophia C
egret_SC <- read.csv("input/egretScraping/egret_SC.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
#colnames(egret_SC)[colnames(egret_SC) == "germ.tim.zero"] <- "germ.time.zero"
colnames(egret_SC)[colnames(egret_SC) == "notes"] <- "Notes"
egret_SC <- egret_SC[complete.cases(egret_SC$datasetID),]
length(unique(egret_SC$datasetID)) #34
dim(egret_SC) # 4947   45
#Christophe
egret_CRD <- read.csv("input/egretScraping/egret_CRD.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
#colnames(egret_CRD)[colnames(egret_CRD) == "germ.tim.zero"] <- "germ.time.zero"
length(unique(egret_CRD$datasetID)) #4
egret_CRD <- egret_CRD[,1:45] # last 6 rows are empty
dim(egret_CRD) #302  45
# Justin
egret_JN <- read.csv("input/egretScraping/egret_JN.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
colnames(egret_JN)[colnames(egret_JN) == "germ.tim.zero"] <- "germ.time.zero"
length(unique(egret_JN$datasetID)) #21
dim(egret_JN) # 3256   45
# Britany
egret_BW <- read.csv("input/egretScraping/egret_BW.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
#colnames(egret_BW)[colnames(egret_BW) == "germ.tim.zero"] <- "germ.time.zero"
length(unique(egret_BW$datasetID)) #8
dim(egret_BW) #1219   45
egret_MN <- read.csv("input/egretScraping/egret_MN.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_MN$datasetID)) #45
dim(egret_MN) #7912   45
egret_HHN <- read.csv("input/egretScraping/egret_HHN.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_HHN$datasetID)) #27
dim(egret_HHN) #2619   45
egret_DK <- read.csv("input/egretScraping/egret_DK.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_DK$datasetID)) #8
egret_DK <- egret_DK[,1:45] # last column is empty
dim(egret_DK) # 838  46
egret_DM <- read.csv("input/egretScraping/egret_DM.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_DM$datasetID)) #27
dim(egret_DM) #2944   45
egret_GG <- read.csv("input/egretScraping/egret_GG.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_GG$datasetID)) #13
egret_GG <- egret_GG[,1:45]
dim(egret_GG) #1641   46
egret_AZ <- read.csv("input/egretScraping/egret_AZ.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_AZ$datasetID)) #12
dim(egret_AZ) #1071   45
egret_JS <- read.csv("input/egretScraping/egret_JS.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
egret_JS <- egret_JS[complete.cases(egret_JS$response),] # tons of empty rows!  # 757 rows actual data
dim(egret_JS) #757  45
length(unique(egret_JS$datasetID)) #9
egret_XW <- read.csv("input/egretScraping/egret_XW.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_XW$datasetID)) #1
dim(egret_XW) #240   45
egret_FB <- read.csv("input/egretScraping/egret_FB.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_FB$datasetID)) #1
dim(egret_FB) #90   45
egret_DB <- read.csv("input/egretScraping/egret_DMB.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
egret_DB <- egret_DB[complete.cases(egret_DB$datasetID),] # Lizzie confirms that 94 rows is good
length(unique(egret_DB$datasetID)) # 1
dim(egret_DB) #94   45
egret_missing <- read.csv("input/egretScraping/missingData.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_missing$datasetID)) #5
dim(egret_missing) #133   45
## some papers were re-scraped after we plotted the curves:
egret_SS <- read.csv("input/egretScraping/egret_SS.csv", na.strings=c("NA","NaN", " ","","n/a","N/A"))
length(unique(egret_SS$datasetID)) #12
dim(egret_SS) #1478 45
dat1 <- rbind(egret_TA, egret_BW, egret_CRD, egret_MN, egret_HHN, egret_DK,
egret_JS, egret_DM, egret_AZ, egret_GG)
colnames(dat1)[colnames(dat1) == "germ.tim.zero"] <- "germ.time.zero"
dat2 <- rbind(egret_DL, egret_SC, dat1, egret_XW, egret_FB, egret_DB)
colnames(dat2)[colnames(dat2) == "chemcial.concent"] <- "chemical.concent"
d <- rbind(egret_JN, dat2, egret_missing, egret_SS)
rm(egret_AZ, egret_BW, egret_CRD, egret_DK, egret_DL, egret_DM, egret_GG, egret_HHN, egret_JN, egret_JS, egret_MN,
egret_SC, egret_TA, egret_XW, egret_DB, egret_FB, egret_missing, dat1, dat2, egret_SS)
# Fix ones with incorrect years
d$datasetID[which(d$datasetID == "Acosta12")] <- "acosta13"
d$datasetID[which(d$datasetID == "Brandel2005")] <- "brandel05"
d$datasetID[which(d$datasetID == "airi2009")] <- "airi09"
d$datasetID[which(d$datasetID == "Airi2009")] <- "airi09"
d$datasetID[which(d$datasetID == "Alptekin2002")] <- "alptekin02"
d$datasetID[which(d$datasetID == "Amini2018")] <- "amini18"
d$datasetID[which(d$datasetID == "pipinus12")] <- "pipinis12"
d$datasetID[which(d$datasetID == "picciau18")] <- "picciau19"
d$datasetID[which(d$datasetID == "li11 ")] <- "li11"
d$datasetID[which(d$datasetID == "Sacande05")] <- "sacande04"
d$datasetID[which(d$datasetID == "tang10a")] <- "tang10_1"
d$datasetID[which(d$datasetID == "tang10b")] <- "tang10_2"
# three yang18
d$datasetID[which(d$datasetID == "yang18" & d$genus == "Maackia")] <- "yang18_1"
d$datasetID[which(d$datasetID == "yang18" & d$genus == "Pasania")] <- "yang18_2"
d$datasetID[which(d$datasetID == "yang18" & d$genus == "Scaevola")] <- "yang18_3"
# two yang16, one already yang16_1
d$datasetID[which(d$datasetID == "yang16")] <- "yang16_2"
# Checked, these are correct: Kolodziejek18,19, Meyer94,95; Olmez07-09; Rouhi12,13; Tilki06,07; tylkowski09-10
d$datasetID[which(d$datasetID == "Aldridge1992")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1993")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1994")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1995")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1996")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1997")] <- "aldridge92"
d$datasetID[which(d$datasetID == "Aldridge1998")] <- "aldridge92"
d$datasetID[which(d$datasetID == "irvani13")] <- "irvani12"
d$datasetID[which(d$datasetID == "irvani14")] <- "irvani12"
d$datasetID[which(d$datasetID == "Redondo-gomez12")] <- "redondo-gomez11"
d$datasetID[which(d$datasetID == "Redondo-gomez13")] <- "redondo-gomez11"
d$datasetID <- tolower(d$datasetID)
# cleaned entered.by
d$entered.by[which(d$entered.by == "DL ")] <- "DL"
# temp <- unique(d[,c("datasetID", "entered.by")])
# temp <- unique(d[,c("datasetID", "entered.by")])
# temp$count <-1
# temp <- unique(d[,c("datasetID", "entered.by")])
# temp$count <-1
# temp$datasetID <- tolower(temp$datasetID)
# ident <- read.csv("..//data/datasetID.csv")
# 3. Clean species names
source("cleaning/source/cleanspecies.R")
# Lee 21 table2 and Fig 1c redundant data, subset to table only
d <- d[-(which(d$datasetID == "lee21" & d$figure %in% c("Figure 1c", "Figure 1b", "Figure 2a", "Figure 3b"))),] # 112 rows
# datasets that were entered my multiple people to check for data consistency, but keeping only one
d <- d[-(which(d$datasetID == "batlla03" & d$entered.by == "DM")),] #34
# datasets that were entered my multiple people to check for data consistency, but keeping only one
d <- d[-(which(d$datasetID == "batlla03" & d$entered.by == "DM")),] #34
# Started 30 Nov 2023
# by Deirdre and Lizzie
# aim is read in the csv files from everyone's data that will include both sourced cleaning code and write out a raw file
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
if(length(grep("deirdre", getwd()) > 0)) {
setwd("~/Documents/github/egret/analyses")
} else if(length(grep("lizzie", getwd()) > 0)) {
setwd("/Users/lizzie/Documents/git/projects/egret/analyses")
} else if(length(grep("sapph", getwd()) > 0)) {
setwd("/Users/sapph/Documents/ubc things/work/egret/analyses")
} else if(length(grep("danielbuonaiuto", getwd()) > 0)) {
setwd("/Users/danielbuonaiuto/Documents/git/egret/analyses")
} else if(length(grep("Xiaomao", getwd()) > 0)) {
setwd("C:/PhD/Project/egret/analyses")
} else if(length(grep("britanywuuu", getwd()) > 0)) {
setwd("/Documents/ubc/year5/TemporalEcologyLab/egret/analyses")
} else if(length(grep("Ken", getwd())) > 0){
setwd("/Users/Ken Michiko Samson/Documents/Temporal Ecology Lab/egret/analyses")
} else if(length(grep("christophe_rouleau-desrochers", getwd())) > 0){
setwd("/Users/christophe_rouleau-desrochers/github/egret/analyses")
}
# 1. Get the data (reads in a dataframe called `egret')
source("cleaning/source/mergedata.R") # 32801 rows, 45 columns
# 2. Clean up datasetID issues
source("cleaning/source/cleandatasetID.R")
# 3. Clean species names
source("cleaning/source/cleanspecies.R")
# Lee 21 table2 and Fig 1c redundant data, subset to table only
d <- d[-(which(d$datasetID == "lee21" & d$figure %in% c("Figure 1c", "Figure 1b", "Figure 2a", "Figure 3b"))),] # 112 rows
#na11: the description of the treatments vary between the methods and the results, so we are removing this study
d <- d[-(which(d$datasetID == "na11")),] #12 rows
# datasets that were entered my multiple people to check for data consistency, but keeping only one
d <- d[-(which(d$datasetID == "batlla03" & d$entered.by == "DM")),] #34
d <- d[-(which(d$datasetID == "chen15" & d$entered.by == "AZ")),] #257
d <- d[-which(d$datasetID == "al-absi10" & d$entered.by == "TA"),]  #96
d <- d[-which(d$datasetID == "chen06" & d$entered.by == "AZ"),] #96
d <- d[-which(d$datasetID == "chichizola18" & d$entered.by == "AZ"),] #45
d <- d[-which(d$datasetID == "han10" & d$entered.by == "CRD"),] #40
d <- d[-which(d$datasetID == "lee21" & d$entered.by == "AZ"),] #30
d <- d[-which(d$datasetID == "moeini21" & d$entered.by == "MN"),] #45
d <- d[-which(d$datasetID == "tilki07" & d$entered.by == "MN"),] #104
d <- d[-which(d$datasetID == "wytsalucy21" & d$entered.by == "DK"),]#92
d <- d[-which(d$datasetID == "yusefi-tanha19" & d$entered.by == "JS"),]#40
# 10 papers were re-scraped by SS and corrected by DL:
corrected <- c("batlla03","chen15","jang22","langlois17", "lo19", "nurse08","olmez07","olmez09", "redondo-gomez11", "zhou08")
d <- d[-which(d$datasetID == "chen15" & d$entered.by == "TA"),] #11
d <- d[-which(d$datasetID == "airi09" & d$entered.by == "TA"),] # 90
d <- d[-which(d$datasetID == "langlois17" & d$entered.by == "AZ"),] #322
d <- d[-which(d$datasetID == "lo19" & d$entered.by == "SC"),] #95
d <- d[-which(d$datasetID == "nurse08" & d$entered.by == "MN"),] #156
d <- d[-which(d$datasetID == "olmez07" & d$entered.by == "MN"),] #92
d <- d[-which(d$datasetID == "olmez09" & d$entered.by == "MN"),] #56
d <- d[-which(d$datasetID == "redondo-gomez11" & d$entered.by == "DM"),]#142
d <- d[-which(d$datasetID == "zhou08" & d$entered.by == "DK"),]  #43
d <- d[-which(d$datasetID == "pritchard93" & d$entered.by == "MN" & d$figure == "Table 3"),]  #6
# momonoki79: issue #65 these two tables switch the seeds to lettuce---a crop
d <- d[-(which(d$datasetID == "momonoki79" & d$figure == "table20")),] # 4
d <- d[-(which(d$datasetID == "momonoki79" & d$figure == "table21")),] # 4
if(FALSE){
##
## From clean_other.R, Original file called coordinate_cleaning_JS.R
unique(d$woody) # N, Y, NA, "rhizomatus shrub/bamboo", "succulent" and more
unique(d$seed.mass.given)
d$seed.mass.given[which(d$seed.mass.given == "yes")] <- "Y"
d$seed.mass.given[which(d$seed.mass.given == "no")] <- "N"
d$seed.mass.given[which(d$seed.mass.given == "Yes")] <- "Y"
d$seed.mass.given[which(d$seed.mass.given == "No")] <- "N"
d$seed.mass.given[which(d$seed.mass.given == "1200")] <- "Y"
d$seed.mass.given[which(d$seed.mass.given == "FALSE")] <- "N"
}
## Loking at each major phase individually running stan
## Look at inter vs intra specific variation, is there local adaptation??
### Dan May 2022
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
options(mc.cores = parallel::detectCores())
graphics.off()
if(length(grep("deirdreloughnan", getwd())>0)) {
setwd("~/Documents/github/wildhellgarden/analyses")
} else if(length(grep("lizzie", getwd())>0)) {setwd("~/Documents/git/projects/")
} else setwd("~/Documents/git/wildhellgarden/analyses")
# Load libraries
#library(rstan)
library(dplyr)
library(brms)
library(tidybayes)
library(tidyr)
# source("source/combineWeather.R")
# source("source/conceptualFigure.R")
load("cgseasonmods.Rda")
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
new.daterz<-data.frame(spp=rep(unique(bb.sppout$spp),each=4),site=rep(unique(lo.siteout$site),13))
lopred<- mod.lo %>%
epred_draws(newdata =new.daterz,ndraws = 1000,re_formula = ~(1|spp)+(1|site))
new.daterz2<-data.frame(year=rep(unique(lo.yearout$year),each=4),site=rep(unique(lo.siteout$site),3))
lopred<- mod.lo %>%
epred_draws(newdata =new.daterz,ndraws = 1000,re_formula = ~(1|spp)+(1|site))
lopred2<- mod.lo %>%
epred_draws(newdata=new.daterz2,ndraws = 1000,re_formula = ~(1|year)+(1|site))
bspred<- mod.bs %>%
epred_draws(newdata =new.daterz,ndraws = 1000,re_formula = ~(1|spp)+(1|site))
bspred2<- mod.bs %>%
epred_draws(newdata =new.daterz2,ndraws = 1000,re_formula = ~(1|year)+(1|site))
library(tidybayes)
pd<-position_dodge(.5)
raw1<-ggplot()+stat_summary(data=use.data,aes(x=spp,y=leafout,color=site),position=pd)+
geom_point(data=use.data,aes(x=spp,y=leafout,color=site),position=pd,size=.1)+coord_cartesian(ylim=c(110,150))+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
raw2<-ggplot()+stat_summary(data=use.data,aes(x=spp,y=budset,color=site),position=pd)+
geom_point(data=use.data,aes(x=spp,y=budset,color=site),position=pd,size=.1)+coord_cartesian(ylim=c(230,290))+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
tag<-paste(use.data$spp,use.data$site)
tag<-as.data.frame(tag)
tagy<-distinct(tag)
lopred$tag<-paste(lopred$spp,lopred$site)
lopred<-filter(lopred,tag %in% c(tagy$tag))
bspred$tag<-paste(bspred$spp,bspred$site)
bspred<-filter(bspred,tag %in% c(tagy$tag))
pop1<-ggplot()+
stat_pointinterval(data=lopred,aes(x=spp,y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
pop2<-ggplot()+
stat_pointinterval(data=bspred,aes(x=spp,y=.epred,color=site),.width = c(.5,.9),position=pd)+
ylab("budset")+coord_cartesian(ylim=c(230,290))+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
po21a<-ggplot()+
stat_pointinterval(data=bspred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(230,290))+ylab("buset")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
ggpubr::ggarrange(pop1,pop2,ncol=1,common.legend=TRUE)
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=site,y=.epred,color=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+facet_wrap(~as.factor(year),scales="free")
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+facet_wrap(~as.factor(year),scale="free")
pop1a<
pop1a
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+facet_wrap(~as.factor(year),scale="free_y")
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=as.factor(year),y=.epred,color=site),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+facet_wrap(~as.factor(year),scale="free")
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=0,y=.epred,color=site,shape=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+facet_wrap(~as.factor(year),scale="free")
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=0,y=.epred,color=site,shape=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=0,y=.epred,color=site,shape=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+scale_x_discrete()
pop1a
pop1a<-ggplot()+
stat_pointinterval(data=lopred2,aes(x=0,y=.epred,shape=site,color=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+scale_x_discrete()
pop1a
po21a<-ggplot()+
stat_pointinterval(data=bspred2,aes(x=0,y=.epred,shape=site,color=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(110,150))+ylab("leafout")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+scale_x_discrete()
ggpubr::ggarrange(pop1,pop2,ncol=2,common.legend=TRUE)
ggpubr::ggarrange(pop1a,po21a,ncol=2,common.legend=TRUE)
po21a<-ggplot()+
stat_pointinterval(data=bspred2,aes(x=0,y=.epred,shape=site,color=as.factor(year)),.width = c(.5,.9),position=pd)+coord_cartesian(ylim=c(230,290))+ylab("buset")+
xlab("")+ggthemes::theme_few()+scale_colour_viridis_d()+scale_x_discrete()
ggpubr::ggarrange(pop1a,po21a,ncol=1,common.legend=TRUE)
ggpubr::ggarrange(pop1a,po21a,ncol=2,common.legend=TRUE)
jpeg("figures/fittedpopulations_x_year.jpeg",width = 6,height=6,unit='in',res=200)
ggpubr::ggarrange(pop1a,po21a,ncol=2,common.legend=TRUE)
dev.off()
